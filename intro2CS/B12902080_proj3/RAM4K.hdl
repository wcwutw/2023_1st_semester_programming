// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in=load, sel=address[0..2], a=ta, b=tb, c=tc, d=td, e=te, f=tf, g=tg, h=th);
	RAM512(in=in, load=ta, address=address[3..11], out=resa);
	RAM512(in=in, load=tb, address=address[3..11], out=resb);
	RAM512(in=in, load=tc, address=address[3..11], out=resc);
	RAM512(in=in, load=td, address=address[3..11], out=resd);
	RAM512(in=in, load=te, address=address[3..11], out=rese);
	RAM512(in=in, load=tf, address=address[3..11], out=resf);
	RAM512(in=in, load=tg, address=address[3..11], out=resg);
	RAM512(in=in, load=th, address=address[3..11], out=resh);
	Mux8Way16(a=resa, b=resb, c=resc, d=resd, e=rese, f=resf, g=resg, h=resh, sel=address[0..2], out=out);

}
