class Gameset{
	field Pile player_1;
	field Pile player_2;
	field Pile common;
	constructor Gameset new() {
		var int i;
		var int random_seed;
		let i=52;
		let player_1=Pile.new();
		let player_2=Pile.new();
		let common=Pile.new();
		while(~(i=0)) {
			let random_seed=Random.rand();
			let random_seed=random_seed/i;
			let random_seed=Tool.mod(random_seed, 2);
			if((random_seed=1 & (~(player_2.getSZ()=26))) | (player_1.getSZ()=26)) {
				do player_2.addCard(i);
			}
			else {
				do player_1.addCard(i);
			}
			//do Random.setSeed(player_2.getback());
			let i=i-1;
		}
		do player_1.shufflePile();
		do player_2.shufflePile();
		return this;
	}
	method void movePile(int type) {
		//type1: common->1
		//type2: common->2
		var int sz;
		let sz=common.getSZ();
		while(~(sz=0)) {
			if(type=1) {
				do player_1.addCard(common.getback());
			}
			else {
				do player_2.addCard(common.getback());
			}
			do common.popback();
			let sz=common.getSZ();
		}
		return;
	}
	method void removeTopCard(int from) {
		//from=1(player_1), 2(player_2);
		if(from=1) {
			do common.addCard(player_1.getback());
			do player_1.popback();
		}
		else {
			do common.addCard(player_2.getback());
			do player_2.popback();
		}
		return;
	}
	method void shuffleAll() {
		do player_1.shufflePile();
		do player_2.shufflePile();
		return;
	}
	method Pile getPile1() {
		return player_1;
	}
	method Pile getPile2() {
		return player_2;
	}
	method Pile getCommon() {
		return common;
	}
	//draw
	function void drawCount(int count1, int count2) {
		var int ten1;
		var int sig1;
		var int ten2;
		var int sig2;
		let ten1=count1/10;
		let sig1=Tool.mod(count1, 10);
		let ten2=count2/10;
		let sig2=Tool.mod(count2, 10);
		if(ten1=1) {
			let ten1=-1;
		}
		if(ten2=1) {
			let ten2=-1;
		}
		if(sig1=1) {
			let sig1=-1;
		}
		if(sig2=1) {
			let sig2=-1;
		}
		do Screen.setColor(false);
		do Screen.drawRectangle(31, 87, 101, 128);
		do Screen.setColor(true);
		do DrawCard.drawNumber(ten1, 31, 87);
		do DrawCard.drawNumber(sig1, 71, 87);
		do Screen.setColor(false);
		do Screen.drawRectangle(401, 142, 471, 183);
		do Screen.setColor(true);
		do DrawCard.drawNumber(ten2, 401, 142);
		do DrawCard.drawNumber(sig2, 441, 142);
		return;
	}
	//set screen
	function void drawStartScreen() {
		do Screen.clearScreen();
		do DrawTool.drawH(10*32+10);
		do DrawTool.drawE(10*32+12);
		do DrawTool.drawA(10*32+14);
		do DrawTool.drawR(10*32+16);
		do DrawTool.drawT(10*32+18);
		do DrawTool.drawA(210*32+9);
		do DrawTool.drawT(210*32+11);
		do DrawTool.drawT(210*32+13);
		do DrawTool.drawA(210*32+15);
		do DrawTool.drawC(210*32+17);
		do DrawTool.drawK(210*32+19);
		return;
	}
	function void drawPlayScreen() {
		do Screen.clearScreen();
		do Screen.drawRectangle(31, 138, 101, 250);
		do Screen.drawRectangle(401, 10, 471, 132);
		do Screen.drawLine(215, 74, 285, 74);
		do Screen.drawLine(215, 74, 215, 186);
		do Screen.drawLine(215, 186, 285, 186);
		do Screen.drawLine(285, 74, 285, 186);
		do Screen.drawLine(250, 0, 250, 74);
		do Screen.drawLine(250, 186, 250, 255);
		return;
	}
	function void drawWinScreen(int player) {
		do DrawTool.drawW(60*32+10);
		do DrawTool.drawI(60*32+12);
		do DrawTool.drawN(60*32+14);
		do DrawTool.drawN(60*32+16);
		do DrawTool.drawE(60*32+18);
		do DrawTool.drawR(60*32+20);
		
		do Screen.drawLine(31, 110, 469, 110);

		do DrawTool.drawP(140*32+2 + 4 );
		do DrawTool.drawL(140*32+4 + 4 );
		do DrawTool.drawA(140*32+6 + 4 );
		do DrawTool.drawY(140*32+8 + 4 );
		do DrawTool.drawE(140*32+10 + 4 );
		do DrawTool.drawR(140*32+12 + 4 );

		if ( player = 1 ) {
			do DrawTool.drawO(140*32+16 + 4 );
			do DrawTool.drawN(140*32+18 + 4 );
			do DrawTool.drawE(140*32+20 + 4 );

		}
		if ( player = 2 ) {
			do DrawTool.drawT(140*32+16 + 4 );
			do DrawTool.drawW(140*32+18 + 4 );
			do DrawTool.drawO(140*32+20 + 4 );

		}
		


		return ;
	}
}
