class Gameset{
	field Pile player_1;
	field Pile player_2;
	field Pile common;
	field int i;
	field int random_seed;
	field int sz;
	field string debug;
	constructor Gameset new() {
		let i=52;
		let debug=":";
		let player_1=Pile.new();
		let player_2=Pile.new();
		let common=Pile.new();
		do Random.setSeed(516);
		while(~(i=0)) {
			let random_seed=Random.randRange(1);
			if((random_seed=1 & (~(player_2.getSZ()=26))) | (player_1.getSZ()=26)) {
				do Output.printInt(random_seed+1);
				do Output.printString(debug);
				do Output.printInt(i);
				do player_2.addCard(i);
			}
			else {
				do Output.printInt(random_seed+1);
				do Output.printString(debug);
				do Output.printInt(i);
				do player_1.addCard(i);
			}
			//do Random.setSeed(player_2.getback());
			let i=i-1;
		}
		do player_1.shufflePile();
		do player_2.shufflePile();
		//let sz=player_1.getSZ();
		//do Output.printInt(sz);
		//let sz=player_2.getSZ();
		//do Output.printInt(sz);
		do Output.printInt(player_1.getback());
		do Output.printInt(player_2.getback());
		do Output.println();
		return this;
	}
	method void movePile(int type) {
		//type1: common->1
		//type2: common->2
		let sz=common.getSZ();
		while(~(sz=0)) {
			if(type=1) {
				do player_1.addCard(common.getback());
			}
			else {
				do player_2.addCard(common.getback());
			}
			do common.popback();
			let sz=common.getSZ();
		}
		return;
	}
	method void removeTopCard(int from) {
		//from=1(player_1), 2(player_2);
		if(from=1) {
			do common.addCard(player_1.getback());
			do player_1.popback();
		}
		else {
			do common.addCard(player_2.getback());
			do player_2.popback();
		}
		do Output.printInt(common.getback());
		//draw card
		return;
	}
	method void shuffleAll() {
		do player_1.shufflePile();
		do player_2.shufflePile();
		return;
	}
	method Pile getPile1() {
		return player_1;
	}
	method Pile getPile2() {
		return player_2;
	}
	method Pile getCommon() {
		return common;
	}
	//draw
	//set screen
	
	method void drawStartScreen() {
		do Screen.clearScreen();
		do DrawTool.drawH(10*32+10);
		do DrawTool.drawE(10*32+12);
		do DrawTool.drawA(10*32+14);
		do DrawTool.drawR(10*32+16);
		do DrawTool.drawT(10*32+18);
		do DrawTool.drawA(210*32+9);
		do DrawTool.drawT(210*32+11);
		do DrawTool.drawT(210*32+13);
		do DrawTool.drawA(210*32+15);
		do DrawTool.drawC(210*32+17);
		do DrawTool.drawK(210*32+19);
		return;
	}
	method void drawPlayScreen() {
		do Screen.clearScreen();
		return;
	}
}
