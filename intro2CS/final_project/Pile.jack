class Pile{
	field Array arr;
	field int arr_sz;
	field int rem;
	field int shuffle_times;
	field int left_id;
	field int right_id;
	field int swap_tmp;
	constructor Pile new() {
		//return null list;
		//do arr.dispose();
		let arr=Array.new(52);
		let arr_sz=0;
		return this;
	}
	method void addCard(int add) {
		let arr[arr_sz]=add;
		let arr_sz=arr_sz+1;
		return;
	}
	//method int removeCard() {
	//	let arr_sz = arr_sz - 1;
	//	let rem=arr[arr_sz];
	//	let arr[arr_sz]=0;
	//	return rem;
	//}
	method void printArr() {
		var int i;
		let i=0;
		while(i<arr_sz) {
			do Output.printInt(arr[i]);
		}
		do Output.println();
		return;
	}
	method Array getArr() {
		return arr;
	}
	method int getSZ() {
		return arr_sz;
	}
	method int getback() {
		return arr[arr_sz-1];
	}
	method void popback() {
		let arr[arr_sz-1]=0;
		let arr_sz=arr_sz-1;
		return;
	}
	method void shufflePile() {
		let shuffle_times=26;
		while(shuffle_times>0) {
			let shuffle_times = shuffle_times - 1;
			let left_id=Random.rand();
			let left_id=Tool.mod(left_id, arr_sz);
			let right_id=Random.rand();
			let right_id=Tool.mod(right_id, arr_sz);
			//swap left and right
			let swap_tmp=arr[left_id];
			let arr[left_id]=arr[right_id];
			let arr[right_id]=swap_tmp;
		}
		return;
	}
}
